{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\notes\\\\client\\\\src\\\\Components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register({\n  loadUser\n}) {\n  _s();\n  // const [usernameError,setUsernameError] = useState(\"\");\n  // const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    if (password === confirmPassword) {\n      try {\n        let response = await axios.post(\"http:/localhost:3345/user/register\", {\n          username: username,\n          email: email,\n          password: password\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      setPasswordError(\"Password not matched\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: \"col-sm-2 col-form-label\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-10\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            className: \"form-control\",\n            name: \"username\",\n            id: \"username\",\n            value: username,\n            onChange: evt => {\n              setUsername(evt.target.value);\n            }\n            // onInput={() => {\n            //   setUsernameError(\"\");\n            // }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputEmail3\",\n          className: \"col-sm-2 col-form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-10\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            className: \"form-control\",\n            name: \"email\",\n            id: \"inputEmail3\",\n            value: email,\n            onChange: evt => {\n              setEmail(evt.target.value);\n            }\n            // onInput={() => {\n            //   setEmailError(\"\");\n            // }}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputPassword3\",\n          className: \"col-sm-2 col-form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            name: \"password\",\n            type: \"password\",\n            className: \"form-control\",\n            id: \"inputPassword3\",\n            value: password,\n            onChange: evt => {\n              setPassword(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), passwordError]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputPassword3\",\n          className: \"col-sm-2 col-form-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-10\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            name: \"password\",\n            type: \"password\",\n            className: \"form-control\",\n            id: \"inputconfirmPassword\",\n            value: confirmPassword,\n            onChange: evt => {\n              setConfirmPassword(evt.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        to: \"/login\",\n        children: \"Already have an Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Register, \"dOXrgDRQtFMFxVLDelBpCmPz9Nw=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["axios","React","useState","NavLink","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","loadUser","_s","passwordError","setPasswordError","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","onSubmit","evt","preventDefault","response","post","err","console","log","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","required","type","name","id","value","onChange","target","to","_c","$RefreshReg$"],"sources":["D:/React/notes/client/src/Components/Register.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Register({loadUser}) {\r\n  // const [usernameError,setUsernameError] = useState(\"\");\r\n  // const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [username,setUsername] = useState(\"\");\r\n  const [email,setEmail] = useState(\"\");\r\n  const [password,setPassword] = useState(\"\");\r\n  const [confirmPassword,setConfirmPassword] = useState(\"\");\r\n\r\n\r\n\r\n  const onSubmit = async (evt) =>{\r\n    evt.preventDefault();\r\n    if(password=== confirmPassword){\r\n      try{\r\n        let response = await axios.post(\"http:/localhost:3345/user/register\",{\r\n          username : username ,\r\n          email  : email   ,\r\n          password    : password\r\n        });\r\n        \r\n\r\n      }catch(err){\r\n        console.log(err)\r\n      }\r\n    }else{\r\n      setPasswordError(\"Password not matched\")\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return <>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"username\" className=\"col-sm-2 col-form-label\">\r\n            Username\r\n          </label>\r\n          <div className=\"col-sm-10\">\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"username\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={(evt)=>{\r\n                setUsername(evt.target.value)\r\n              }}\r\n              // onInput={() => {\r\n              //   setUsernameError(\"\");\r\n              // }}\r\n            />\r\n            {/* {Username} */}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputEmail3\" className=\"col-sm-2 col-form-label\">\r\n            Email\r\n          </label>\r\n          <div className=\"col-sm-10\">\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"email\"\r\n              id=\"inputEmail3\"\r\n              value={email}\r\n              onChange={(evt)=>{\r\n                setEmail(evt.target.value);\r\n              }}\r\n              // onInput={() => {\r\n              //   setEmailError(\"\");\r\n              // }}\r\n            />\r\n            {/* {emailError} */}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">\r\n            Password\r\n          </label>\r\n          <div className=\"col-sm-10\">\r\n            <input\r\n              required\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"inputPassword3\"\r\n              value={password}\r\n              onChange={(evt)=>{\r\n                setPassword(evt.target.value);\r\n              }}\r\n            />\r\n            {passwordError}\r\n          </div>\r\n        </div>\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"inputPassword3\" className=\"col-sm-2 col-form-label\">\r\n            Confirm Password\r\n          </label>\r\n          <div className=\"col-sm-10\">\r\n            <input\r\n              required\r\n              name=\"password\"\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"inputconfirmPassword\"\r\n              value={confirmPassword}\r\n              onChange={(evt)=>{\r\n                setConfirmPassword(evt.target.value);\r\n              }}\r\n            />\r\n            {/* {passwordError} */}\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Create Account\r\n        </button>\r\n      <NavLink className=\"btn btn-success\" type=\"submit\" to=\"/login\" >Already have an Account</NavLink>\r\n      </form>\r\n  </>\r\n}\r\n\r\nexport default Register\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}