{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\notes\\\\client\\\\src\\\\Components\\\\Register.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction useCounter(init = 0) {\n  _s();\n  const [count, setCount] = useState(init);\n  const inc = () => {\n    setCount(count + 1);\n  };\n  const dec = () => {\n    setCount(count - 1);\n  };\n  return [count, inc, dec];\n}\n_s(useCounter, \"C//XsLoMRc0q4W2IyL7iSOlVGcI=\");\nfunction useErrors(err = {}) {\n  _s2();\n  const [errors, setErrors] = useState(err);\n  const setError = (name, value) => {\n    let newError = {\n      ...errors\n    };\n    newError[name] = value;\n    setErrors(newError);\n  };\n  return [errors, setError];\n}\n_s2(useErrors, \"FNqF56zAH7m0NT0vjEoV8bQe6Ts=\");\nfunction Register() {\n  //  const [errors, setError] = useErrors({name:\"\", email:\"\", password: \"\"});\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [errors.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setError('name', \"Ollala\"),\n        children: \"Click\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","useCounter","init","_s","count","setCount","inc","dec","useErrors","err","_s2","errors","setErrors","setError","name","value","newError","Register","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React/notes/client/src/Components/Register.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nfunction useCounter(init = 0) {\r\n  const [count, setCount] = useState(init);\r\n\r\n  const inc = () => {\r\n    setCount(count + 1);\r\n  }\r\n  const dec = () => {\r\n    setCount(count - 1);\r\n  }\r\n\r\n  return [count, inc, dec];\r\n}\r\n\r\nfunction useErrors(err = {}) {\r\n  const [errors, setErrors] = useState(err);\r\n  const setError = (name, value) => {\r\n    let newError = {...errors};\r\n    newError[name] = value;\r\n    setErrors(newError);\r\n  }\r\n  return [errors, setError];\r\n}\r\n\r\nfunction Register() {\r\n  //  const [errors, setError] = useErrors({name:\"\", email:\"\", password: \"\"});\r\n\r\n  return <>\r\n  <div>\r\n    {errors.name}\r\n    <button onClick={()=>setError('name', \"Ollala\")}>Click</button>\r\n  </div>\r\n  </>\r\n}\r\n\r\nexport default Register\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGvC,SAASC,UAAUA,CAACC,IAAI,GAAG,CAAC,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACM,IAAI,CAAC;EAExC,MAAMI,GAAG,GAAGA,CAAA,KAAM;IAChBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EACD,MAAMG,GAAG,GAAGA,CAAA,KAAM;IAChBF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EAED,OAAO,CAACA,KAAK,EAAEE,GAAG,EAAEC,GAAG,CAAC;AAC1B;AAACJ,EAAA,CAXQF,UAAU;AAanB,SAASO,SAASA,CAACC,GAAG,GAAG,CAAC,CAAC,EAAE;EAAAC,GAAA;EAC3B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAACa,GAAG,CAAC;EACzC,MAAMI,QAAQ,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAChC,IAAIC,QAAQ,GAAG;MAAC,GAAGL;IAAM,CAAC;IAC1BK,QAAQ,CAACF,IAAI,CAAC,GAAGC,KAAK;IACtBH,SAAS,CAACI,QAAQ,CAAC;EACrB,CAAC;EACD,OAAO,CAACL,MAAM,EAAEE,QAAQ,CAAC;AAC3B;AAACH,GAAA,CARQF,SAAS;AAUlB,SAASS,QAAQA,CAAA,EAAG;EAClB;;EAEA,oBAAOnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACPpB,OAAA;MAAAoB,QAAA,GACGP,MAAM,CAACG,IAAI,eACZhB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAIN,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAE;QAAAK,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EAAC,gBACJ,CAAC;AACL;AAACC,EAAA,GATQP,QAAQ;AAWjB,eAAeA,QAAQ;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}